@mixin bp($size) {
  @media screen and (min-width: $size) {
    @content;
  }
}

@mixin bp-max($size) {
  @media screen and (max-width: $size) {
    @content;
  }
}

@mixin bp-bw($min, $max) {
  @media screen and (min-width: $min) and (max-width: $max) {
    @content;
  }
}

@mixin grid-container($columns: 12, $gap: 0) {
  > * {
    // small screens
    width: 100%;
  }

  @media screen and (min-width: $medium) {
    // start css grid fallback
    &:before,
    &:after {
      content: ' ';
      display: table;
    }

    &:after {
      clear: both;
    }

    > * {
      display: block;
      float: left;
      vertical-align: top;

      &:last-child {
        margin-right: 0;
      }
    }
    // end css grid fallback

    @supports (grid-area: auto) { // instead of display: grid to address Edge grid implementation
      display: grid;
      grid-template-columns: repeat($columns, 1fr);
      grid-gap: $gap;

      // start fallback overwrite
      &:before,
      &:after {
        content: '';
        display: none;
      }

      &:after {
        clear: none;
      }

      > * {
        width: auto;
        float: none;
      }
      // end fallback overwrite
    }
  }
}

@mixin grid-item($column-span: 12, $fallback-column-width: 47.25%) {
  width: $fallback-column-width;
  margin: 0;
  padding: 0;

  @supports (grid-area: auto) { // instead of display: grid to address Edge grid implementation
    grid-column: span $column-span;
    // start fallback overwrite
    width: auto;
    float: none;
    // end fallback overwrite
  }
}
